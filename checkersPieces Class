import pygame
X=472
Y=472
pygame.init()
rootDisplay = pygame.display.set_mode((X,Y))

board = pygame.image.load('./checkersBoard.png')
white = (0, 0, 0)
rootDisplay.fill(white)
rootDisplay.blit(board, (0,0))
class Pieces:
    def __init__(self, location, color, number):
        self.position = location
        self.color = color
        self.rbg=(0,0,0)
        if self.color=='b':
            self.rgb=(60,60,60)
        if self.color=='r':
            self.rgb=(100,0,0)
        self.number = number
        self.surface = pygame.Surface((250, 250))
        pygame.draw.circle(self.surface, self.rgb, (59,59), 21)
        self.surface.set_colorkey((0,0,0))
        rootDisplay.blit(self.surface, (29.5+59*(self.number-1),29.5+59*(self.position-1)))
    def get_info(self):
        return self.position, self.color

    def move_left(self):
        if self.color == 'r':
            self.position -= 1
            self.number -= 1
            if self.position % 10 == 0 or self.position == 19 or self.position == 29 or self.position == 39 \
                    or self.position == 49 or self.position == 59 or self.position == 69 or self.position == 79 \
                    or self.position == 89:
                self.position += 1
                self.number += 1
            return int(self.position)
        elif self.color == 'b':
            self.position += 1
            self.number += 1
            if self.position % 10 == 0 or self.position == 19 or self.position == 29 or self.position == 39 \
                    or self.position == 49 or self.position == 59 or self.position == 69 or self.position == 79 \
                    or self.position == 89:
                self.position -= 1
                self.number -= 1
            return int(self.position)

    def move_right(self):
        if self.color == 'r':
            self.position -= 1
            self.number += 1
            if self.position % 10 == 0 or self.position == 19 or self.position == 29 or self.position == 39 \
                    or self.position == 49 or self.position == 59 or self.position == 69 or self.position == 79 \
                    or self.position == 89:
                self.position += 1
                self.number -= 1
            return int(self.position)
        if self.color == 'b':
            self.position += 1
            self.number -= 1
            if self.position % 10 == 0 or self.position == 19 or self.position == 29 or self.position == 39 \
                    or self.position == 49 or self.position == 59 or self.position == 69 or self.position == 79 \
                    or self.position == 89:
                self.position -= 1
                self.number += 1
            return int(self.position), int(self.number)
